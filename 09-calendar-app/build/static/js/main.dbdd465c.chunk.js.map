{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","actions/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","location","pathname","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbdd465c.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventSetActive: '[EVENT] Set Active',\r\n    eventLogout: '[EVENT] Clear Active',\r\n\r\n    eventStartAddNew: '[EVENT] Start add new',\r\n    eventAddNew: '[EVENT] Add new',\r\n    eventClearActiveEvent: '[EVENT] Clear active event',\r\n    eventUpdated: '[EVENT] Event updated',\r\n    eventDeleted: '[EVENT] Event deleted',\r\n    eventLoaded: '[EVENT] Event loaded',\r\n\r\n    authCheckingFinish: '[AUTH] Finish checking login state',\r\n    authStartLogin: '[AUTH] Start login',\r\n    authLogin: '[AUTH] Login',\r\n    authStartRegister: '[AUTH] Start Register',\r\n    authStartTokenRenew: '[AUTH] Start token renew',\r\n    authLogout: '[AUTH] Logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n    \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n// {\r\n//     id: '',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Aram'\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload,\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null,\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n  \r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/auth\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/auth\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken,\r\n}","import moment from 'moment';\r\n\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n     \r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name,\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT')\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE')\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister =  ( email, password, name ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'aram@gmail.com',\r\n        lPassword: '123456',\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Jazmín',\r\n        rEmail: 'jazmin@gmail.com',\r\n        rPassword: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n    \r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error')\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword, rName ) );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir </span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\r\nconst nowPlusOne = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title:  '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOne.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui )\r\n    const { activeEvent } = useSelector( state => state.calendar )\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlusOne.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    \r\n    const closeModal = () => {\r\n        // TODO: Cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment ( start );\r\n        const momentEnd = moment ( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) ); \r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> { (activeEvent)? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n      </Modal>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n        // Arregla el bug de cuando tenemos un seleccionado un evento\r\n        // y tocamos el botón de añadir tiene el evento activo y no uno nuevo\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\" ></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from './events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\" ></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es-mx';\r\nimport { DeleteEventFab } from '../../actions/DeleteEventFab';\r\n\r\nmoment.locale('es-mx');\r\n\r\nconst localizer = momentLocalizer(moment); \r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar )\r\n    const { uid } = useSelector( state => state.auth )\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() )\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView= { onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) =>(\r\n                    ( isAuthenticated )\r\n                        ? ( <Redirect to=\"/\" /> )\r\n                        : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname );\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) =>(\r\n                    ( isAuthenticated )\r\n                        ? ( <Component { ...props } /> )\r\n                        : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n  \r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth )\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\"  \r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/\"  \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                     />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}